// 如果hooks.js文件放在项目目录下，那么这里仅需要导出这个文件路径字符串即可
// 当HOOKS_FILE这个导出值存在时，本文件内定义的其他编程接口将无效。以HOOKS_FILE指定的hooks.js内容为准
exports.HOOKS_FILE='path/to/hooks.js'


// 网络请求超时，默认3秒
exports.NETWORK_TIMEOUT=3e3

// 是否读写文件缓存，false时文件缓存无效
// 不设置，默认false
exports.WRITE_CACHE=true

// 自定义url与缓存文件名的映射关系
exports.url2filename=({url})=>{
  return
}

// 根据当前请求的url和响应，选择性的修改响应结果
exports.url2response=({
  url, response, postData,
  requestHeaders,
  responseHeaders,
  addResponseHeader,
  deleteResponseHeader,
  setStatusCode,
  updateCORSHeaders,
  sleep,
})=>{
  console.log({url, response})
  if(!url.match(/^https\:\/\/www.baidu.com\/$/)) return
  return `<h1>blocked by chrome-dev-tool</h1>`
}

// 是否需要缓存这个请求的结果
// 如果return true，则即使文件内容里存在历史响应结果，也不会返回文件内容
exports.should_no_cache=({url})=>{
  if(url.match(/jsonp/)) return true
}
